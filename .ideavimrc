let mapleader = " "
source ~/.vimrc

set ideajoin
set ideastatusicon=gray
set surround
set easymotion
set NERDTree
set commentary

map ∆ <Action>(EditorCloneCaretBelow)
map ˚ <Action>(EditorCloneCaretAbove)

map U <C-R>

"" Re:
map <leader>rf <Action>(ReformatCode)
map <leader>rn <Action>(RenameElement)

"" Go:
map gu <Action>(GotoSuperMethod)
map gi <Action>(GotoImplementation)
map gw <Action>(GotoNextError)

"" find
map <leader>fc <Action>(GotoClass)
map <leader>ff <Action>(GotoFile)
map <leader>fs <Action>(GotoSymbol)
map <leader>fg <Action>(FindInPath)
map <leader>fu <Action>(FindUsages) 
map <leader>fa <Action>(GotoAction)

"" new:
map <leader>nf <Action>(NewElement)

"" show:
map su <Action>(ShowUsages)
map sf <Action>(SelectInProjectView)
map sn <Action>(ViewNavigationBar)
map se <Action>(RecentFiles)
map sgs <Action>(ActivateCommitToolWindow)
map sd <Action>(QuickJavaDoc)
map sl <Action>(ActivateVersionControlToolWindow)
map ss <Action>(ViewStatusBar)
map sb <Action>(ActivateBuildToolWindow)
map sgd <Action>(ActivateGradleToolWindow)
map st <Action>(ActivateTerminalToolWindow)
map sm <Action>(FileStructurePopup)
map sr <Action>(:cursive.repl.actions/run-top-sexp)

"" extract:
map <leader>ev <Action>(IntroduceVariable)
map <leader>ef <Action>(ExtractFunction)
map <leader>ea <Action>(IntroduceParameter)
map <leader>ep <Action>(IntroduceProperty)

map <leader>df <Action>(ToggleDistractionFreeMode)

"" move:
map mk @=<Action>(MoveStatementUp)<CR>
map mj @=<Action>(MoveStatementDown)<CR>

map <leader>rd <Action>(Debug)
map <leader>b <Action>(ToggleLineBreakpoint)
map <leader>rr <Action>(Run)
map <leader>rc <Action>(Stop)
map <leader>rga <Action>(ExternalSystem.RefreshProject)

map <leader>ca <Action>(ShowIntentionActions)

"" replace ideavim's emulated <C-o> and <C-i> with IDE's to have correct
"" history
map <C-o> <Action>(Back)
map <C-i> <Action>(Forward)

nnoremap <CR> :noh<CR><CR>